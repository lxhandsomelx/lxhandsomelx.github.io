<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>hexo博客搭建</title>
    <url>/2020/05/28/hello-world/</url>
    <content><![CDATA[<p>Welcome to my Blog</p>
<h1 id="第一篇博客文章"><a href="#第一篇博客文章" class="headerlink" title="第一篇博客文章"></a>第一篇博客文章</h1><p>&emsp; &emsp; 学习windows环境下hexo博客的搭建</p>
<h2 id="1-软件安装"><a href="#1-软件安装" class="headerlink" title="1. 软件安装"></a>1. 软件安装</h2><h3 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h3><h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><h2 id="2-创建github账号，并创建usename-gethub-io仓库"><a href="#2-创建github账号，并创建usename-gethub-io仓库" class="headerlink" title="2. 创建github账号，并创建usename. gethub. io仓库"></a>2. 创建github账号，并创建usename. gethub. io仓库</h2><h2 id="3-本地搭建hexo博客"><a href="#3-本地搭建hexo博客" class="headerlink" title="3. 本地搭建hexo博客"></a>3. 本地搭建hexo博客</h2><h3 id="在电脑上创建一个存放博客的文件夹"><a href="#在电脑上创建一个存放博客的文件夹" class="headerlink" title="在电脑上创建一个存放博客的文件夹"></a>在电脑上创建一个存放博客的文件夹</h3><h3 id="在该文件夹下右键-git-bash-here"><a href="#在该文件夹下右键-git-bash-here" class="headerlink" title="在该文件夹下右键 -git bash here"></a>在该文件夹下右键 -git bash here</h3><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure>

<h3 id="之后输入"><a href="#之后输入" class="headerlink" title="之后输入"></a>之后输入</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<h3 id="在浏览器中访问http-localhost-4000即可看到博客页面"><a href="#在浏览器中访问http-localhost-4000即可看到博客页面" class="headerlink" title="在浏览器中访问http://localhost:4000即可看到博客页面"></a>在浏览器中访问<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a>即可看到博客页面</h3><h2 id="4-将博客托管到github上"><a href="#4-将博客托管到github上" class="headerlink" title="4. 将博客托管到github上"></a>4. 将博客托管到github上</h2><h3 id="配置SSH-key"><a href="#配置SSH-key" class="headerlink" title="配置SSH key"></a>配置SSH key</h3><p> 为什么要配置这个呢？因为你提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;邮件地址&quot;</span><br></pre></td></tr></table></figure>

<p>然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到. ssh\id_rsa. pub文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：<br><img src="/2020/05/28/hello-world/1.png" alt="first"></p>
<h3 id="测试是否成功"><a href="#测试是否成功" class="headerlink" title="测试是否成功"></a>测试是否成功</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ ssh -T git@github.com # 注意邮箱地址不用改</span><br></pre></td></tr></table></figure>

<p> 如果提示Are you sure you want to continue connecting (yes/no)?，输入yes，然后会看到：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Hi liuxianan! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure>

<p>看到这个信息说明SSH已配置成功！<br>此时你还需要配置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git config --global user.name &quot;liuxianan&quot;&#x2F;&#x2F; 你的github用户名，非昵称</span><br><span class="line">$ git config --global user.email  &quot;xxx@qq.com&quot;&#x2F;&#x2F; 填写你的github注册邮箱</span><br></pre></td></tr></table></figure>

<h3 id="修改配置-config-yml"><a href="#修改配置-config-yml" class="headerlink" title="修改配置_config. yml"></a>修改配置_config. yml</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https:&#x2F;&#x2F;github.com&#x2F;lxhandsomelx&#x2F;lxhandsomelx.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<h3 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure>

<h3 id="hexo相关命令"><a href="#hexo相关命令" class="headerlink" title="hexo相关命令"></a>hexo相关命令</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new &quot;postName&quot; #新建文章</span><br><span class="line">hexo new page &quot;pageName&quot; #新建页面</span><br><span class="line">hexo generate #生成静态页面至public目录</span><br><span class="line">hexo server #开启预览访问端口（默认端口4000，&#39;ctrl + c&#39;关闭server）</span><br><span class="line">hexo deploy #部署到GitHub</span><br><span class="line">hexo help  # 查看帮助</span><br><span class="line">hexo version  #查看Hexo的版本</span><br><span class="line">&#x2F;&#x2F;缩写</span><br><span class="line">hexo n &#x3D;&#x3D; hexo new</span><br><span class="line">hexo g &#x3D;&#x3D; hexo generate</span><br><span class="line">hexo s &#x3D;&#x3D; hexo server</span><br><span class="line">hexo d &#x3D;&#x3D; hexo deploy</span><br><span class="line">&#x2F;&#x2F;组合命令</span><br><span class="line">hexo s -g #生成并本地预览</span><br><span class="line">hexo d -g #生成并上传</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="美图"><a href="#美图" class="headerlink" title="美图"></a>美图</h2><p><img src="/2020/05/28/hello-world/aaa.jpg" alt="niceimg"></p>
]]></content>
  </entry>
  <entry>
    <title>servlet学习1</title>
    <url>/2020/06/24/servlet/</url>
    <content><![CDATA[<h1 id="servlet入门"><a href="#servlet入门" class="headerlink" title="servlet入门"></a>servlet入门</h1><p>&emsp;&emsp;学习servlet</p>
<h2 id="1-用eclipse创建web项目"><a href="#1-用eclipse创建web项目" class="headerlink" title="1.用eclipse创建web项目"></a>1.用eclipse创建web项目</h2><h2 id="2-在java-Resources下新建servlet包"><a href="#2-在java-Resources下新建servlet包" class="headerlink" title="2.在java Resources下新建servlet包"></a>2.在java Resources下新建servlet包</h2><h2 id="3-创建class实现servlet接口（直接创建servlet类）"><a href="#3-创建class实现servlet接口（直接创建servlet类）" class="headerlink" title="3.创建class实现servlet接口（直接创建servlet类）"></a>3.创建class实现servlet接口（直接创建servlet类）</h2><ul>
<li>实现service类</li>
</ul>
<h2 id="4-在web-xml进行servlet配置（ide自动生成）"><a href="#4-在web-xml进行servlet配置（ide自动生成）" class="headerlink" title="4.在web.xml进行servlet配置（ide自动生成）"></a>4.在web.xml进行servlet配置（ide自动生成）</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;servlet&gt;</span><br><span class="line">	&lt;servlet-name&gt;firsttest&lt;&#x2F;servlet-name&gt;</span><br><span class="line">	&lt;servlet-class&gt;testserver.firsttest&lt;&#x2F;servlet-class&gt;</span><br><span class="line">&lt;&#x2F;servlet&gt;</span><br><span class="line">&lt;servlet-mapping&gt;</span><br><span class="line">	&lt;servlet-name&gt;firsttest&lt;&#x2F;servlet-name&gt;</span><br><span class="line">	&lt;url-pattern&gt;&#x2F;ad&lt;&#x2F;url-pattern&gt;</span><br><span class="line">&lt;&#x2F;servlet-mapping&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>在浏览器中访问<a href="http://localhost:8080/项目名称/ad" target="_blank" rel="noopener">http://localhost:8080/项目名称/ad</a>即可访问servlet</li>
</ul>
<hr>
<h2 id="美图"><a href="#美图" class="headerlink" title="美图"></a>美图</h2><p><img src="/2020/06/24/servlet/1.jpg" alt="1"></p>
]]></content>
  </entry>
  <entry>
    <title>servlet学习2</title>
    <url>/2020/06/27/servlet1/</url>
    <content><![CDATA[<h1 id="servlet配置详解"><a href="#servlet配置详解" class="headerlink" title="servlet配置详解"></a>servlet配置详解</h1><p>&emsp; &emsp; 学习servlet详细配置</p>
<h2 id="1-servlet及servlet-mapping基本配置"><a href="#1-servlet及servlet-mapping基本配置" class="headerlink" title="1. servlet及servlet-mapping基本配置"></a>1. servlet及servlet-mapping基本配置</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;servlet&gt;</span><br><span class="line">  &lt;servlet-name&gt;firsttest&lt;&#x2F;servlet-name&gt;</span><br><span class="line">  &lt;servlet-class&gt;testserver.firsttest&lt;&#x2F;servlet-class&gt;</span><br><span class="line">&lt;&#x2F;servlet&gt;</span><br><span class="line">  &lt;servlet-mapping&gt;</span><br><span class="line">  &lt;servlet-name&gt;firsttest&lt;&#x2F;servlet-name&gt;</span><br><span class="line">  &lt;url-pattern&gt;&#x2F;ad&lt;&#x2F;url-pattern&gt;</span><br><span class="line">&lt;&#x2F;servlet-mapping&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>其中servlet及servlet-mapping的servlet-name要一致</li>
<li>servlet-class为完整类名</li>
<li>url-pattern为访问路径例如：localhost：8080/项目名/ad(url-pattern)</li>
</ul>
<h2 id="2-url-pattern细节配置"><a href="#2-url-pattern细节配置" class="headerlink" title="2. url-pattern细节配置"></a>2. url-pattern细节配置</h2><p><img src="/2020/06/27/servlet1/1.jpg" alt="1"></p>
<h2 id="3-servlet服务器启动实例化配置与缺省配置"><a href="#3-servlet服务器启动实例化配置与缺省配置" class="headerlink" title="3. servlet服务器启动实例化配置与缺省配置"></a>3. servlet服务器启动实例化配置与缺省配置</h2><p><img src="/2020/06/27/servlet1/2.jpg" alt="2"></p>
<ul>
<li>其中servlet缺省配置会影响静态资源匹配，因为服务器进行资源访问是经过默认缺省servlet类进行查找的</li>
</ul>
<h2 id="4-导航页面配置"><a href="#4-导航页面配置" class="headerlink" title="4. 导航页面配置"></a>4. 导航页面配置</h2><p><img src="/2020/06/27/servlet1/3.jpg" alt="3"></p>
<hr>
<h2 id="美图"><a href="#美图" class="headerlink" title="美图"></a>美图</h2><p><img src="/2020/06/27/servlet1/4.jpg" alt="4"></p>
]]></content>
  </entry>
  <entry>
    <title>servlet学习3</title>
    <url>/2020/06/28/servlet2/</url>
    <content><![CDATA[<h1 id="servletContext学习"><a href="#servletContext学习" class="headerlink" title="servletContext学习"></a>servletContext学习</h1><h2 id="1-servlet对象基础知识"><a href="#1-servlet对象基础知识" class="headerlink" title="1.servlet对象基础知识"></a>1.servlet对象基础知识</h2><p><strong>什么是ServletContext对象</strong><br>    ServletContext代表一个web应用环境（上下文）对象，ServletContext对象内部封装是该web应用的信息，ServletContext对象一个web应用只有一个</p>
<pre><code>但是一个web应用可以有多个servlet对象</code></pre><h2 id="2-servlet生命周期及对象获取"><a href="#2-servlet生命周期及对象获取" class="headerlink" title="2.servlet生命周期及对象获取"></a>2.servlet生命周期及对象获取</h2><p><strong>ServletContext对象的生命周期</strong><br>创建：该web应用被加载（服务器启动或发布web应用（前提，服务器为启动状态））<br>销毁：web应用被卸载（服务器关闭，移除该web应用）<br><strong>怎样获得ServletContext对象</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获得ServletContext对象</span></span><br><span class="line">ServletContext context = <span class="keyword">this</span>.getServletContext();</span><br><span class="line"><span class="comment">//或者通过ServletConfig获取</span></span><br><span class="line">ServletContext context = config.getServletContext();</span><br></pre></td></tr></table></figure>
<h2 id="3-servlet获取web应用全局的初始化参数"><a href="#3-servlet获取web应用全局的初始化参数" class="headerlink" title="3.servlet获取web应用全局的初始化参数"></a>3.servlet获取web应用全局的初始化参数</h2><p><strong>web.xml中配置初始化参数</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置全局的初始化参数 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">param-name</span>&gt;</span>driver<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">param-value</span>&gt;</span>org.mariadb.jdbc.Driver<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>通过servletContext对象获取参数</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ServletContext context = <span class="keyword">this</span>.getServletContext();</span><br><span class="line"><span class="comment">//获取初始化参数</span></span><br><span class="line">String initparameter = context.getInitParameter(<span class="string">"driver"</span>);</span><br></pre></td></tr></table></figure>
<h2 id="4-获取web应用中任何资源的绝对路径（important）"><a href="#4-获取web应用中任何资源的绝对路径（important）" class="headerlink" title="4.获取web应用中任何资源的绝对路径（important）"></a>4.获取web应用中任何资源的绝对路径（important）</h2><p>方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String path = context.getRealPath(相对于该web应用的相对地址);</span><br></pre></td></tr></table></figure>
<h2 id="5-servletContext是一个域对象（important）"><a href="#5-servletContext是一个域对象（important）" class="headerlink" title="5.servletContext是一个域对象（important）"></a>5.servletContext是一个域对象（important）</h2><ul>
<li>什么是域对象？什么是域？<br>存储数据的区域就是域对象</li>
</ul>
<p>servletContext域对象的作用范围：整个web应用（所有的web资源都可以随意向servletContext域中存储数据，数据可以共享）</p>
<p>域对象的通用方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">setAttribute(String name,Object obj);</span><br><span class="line">getAttribute(String name);</span><br><span class="line">removeAttribute(String name);</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="美图"><a href="#美图" class="headerlink" title="美图"></a>美图</h2><p><img src="/2020/06/28/servlet2/1.jpg" alt="1"></p>
]]></content>
  </entry>
  <entry>
    <title>servlet学习4</title>
    <url>/2020/06/28/servlet3/</url>
    <content><![CDATA[<h1 id="httpServletResponse学习"><a href="#httpServletResponse学习" class="headerlink" title="httpServletResponse学习"></a>httpServletResponse学习</h1><h2 id="1-response运行流程"><a href="#1-response运行流程" class="headerlink" title="1.response运行流程"></a>1.response运行流程</h2><p><img src="/2020/06/28/servlet3/1.jpg" alt="1"></p>
<h2 id="2-response设置http响应"><a href="#2-response设置http响应" class="headerlink" title="2.response设置http响应"></a>2.response设置http响应</h2><p><strong>http响应</strong><br><img src="/2020/06/28/servlet3/2.jpg" alt="1"></p>
<h3 id="设置http响应行中的状态码"><a href="#设置http响应行中的状态码" class="headerlink" title="设置http响应行中的状态码"></a>设置http响应行中的状态码</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">response.setStatus(<span class="number">302</span>);<span class="comment">//302表示重定向</span></span><br></pre></td></tr></table></figure>
<h3 id="通过response设置响应头"><a href="#通过response设置响应头" class="headerlink" title="通过response设置响应头"></a>通过response设置响应头</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//add表示添加，set表示设置</span></span><br><span class="line">addHeader(String name,String value);</span><br><span class="line">addIntHeader(String name,<span class="keyword">int</span> value);</span><br><span class="line">addDateHeader(String name,<span class="keyword">long</span> date);</span><br><span class="line">setHeader(String name,String value);<span class="comment">//重要</span></span><br><span class="line">setDateHeader(String name,<span class="keyword">long</span> date);</span><br><span class="line">addIntHeader(String name,<span class="keyword">int</span> value);</span><br><span class="line">response.response.sendRedirect(<span class="string">""</span>);<span class="comment">//重定向</span></span><br><span class="line"><span class="comment">//其中响应头Location，url为跳转</span></span><br><span class="line"><span class="comment">//refresh,秒数;url="url".表示定时刷新</span></span><br></pre></td></tr></table></figure>
<h3 id="通过response设置响应体"><a href="#通过response设置响应体" class="headerlink" title="通过response设置响应体"></a>通过response设置响应体</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//防止乱码</span></span><br><span class="line">response.setHeader(<span class="string">"Content-Type"</span>,<span class="string">"text/html;charset=UTF-8"</span>);<span class="comment">//设置文件编码格式</span></span><br><span class="line"><span class="comment">//或者</span></span><br><span class="line">response.setContentType(<span class="string">"text/html;charset=UTF-8"</span>);<span class="comment">//设置文件编码格式</span></span><br><span class="line">PrintWrite writer = response.getWriter();</span><br><span class="line">writer.write(<span class="string">""</span>);</span><br></pre></td></tr></table></figure>
<h3 id="使用response的outputstream-下载功能"><a href="#使用response的outputstream-下载功能" class="headerlink" title="使用response的outputstream(下载功能)"></a>使用response的outputstream(下载功能)</h3><h4 id="文件下载"><a href="#文件下载" class="headerlink" title="文件下载"></a>文件下载</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获取页面访问时传递的文件名参数</span></span><br><span class="line">String filename = request.getParameter(<span class="string">"filename"</span>);</span><br><span class="line"><span class="comment">//设置下载文件的类型---客户端通过文件的mime类型去区分类型</span></span><br><span class="line">response.setContentType(<span class="keyword">this</span>.getServletContext().getMimeType(filename));</span><br><span class="line"><span class="comment">//告诉客户端该文件不是直接打开而是(下载)</span></span><br><span class="line">response.setHeader(<span class="string">"Content-Disposition"</span>,<span class="string">"attachment;filename="</span>+filename);</span><br><span class="line">ServletOutputStream out = response.getOutputStream();</span><br><span class="line"><span class="comment">//获取服务器上的文件</span></span><br><span class="line">String realpath = <span class="keyword">this</span>.getServletContext().getRealPath(<span class="string">"相对路径"</span>);</span><br><span class="line"><span class="comment">//读取服务器文件</span></span><br><span class="line">InputStream in = <span class="keyword">new</span> FileInputStream(realpath);</span><br><span class="line"><span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line"><span class="keyword">while</span>((len=in.read(buffer))&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    out.write(buffer,<span class="number">0</span>,len);</span><br><span class="line">&#125;</span><br><span class="line">in.close();</span><br><span class="line">out.close();</span><br></pre></td></tr></table></figure>
<h4 id="文件下载名中文乱码问题"><a href="#文件下载名中文乱码问题" class="headerlink" title="文件下载名中文乱码问题"></a>文件下载名中文乱码问题</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//解决获取中文参数乱码问题</span></span><br><span class="line">filename = <span class="keyword">new</span> String(filename.getBytes(<span class="string">"ISO8859-1"</span>),<span class="string">"utf-8"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//各个浏览器兼容</span></span><br><span class="line"><span class="comment">// 解决中文文件名乱码问题  </span></span><br><span class="line"><span class="keyword">if</span> (request.getHeader(<span class="string">"User-Agent"</span>).toLowerCase()  </span><br><span class="line">        .indexOf(<span class="string">"firefox"</span>) &gt; <span class="number">0</span>) &#123;  </span><br><span class="line">        fname = <span class="keyword">new</span> String(fileName.getBytes(<span class="string">"UTF-8"</span>), <span class="string">"ISO8859-1"</span>); <span class="comment">// firefox浏览器  </span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (request.getHeader(<span class="string">"User-Agent"</span>).toUpperCase()  </span><br><span class="line">        .indexOf(<span class="string">"MSIE"</span>) &gt; <span class="number">0</span>) &#123;  </span><br><span class="line">    fname = URLEncoder.encode(fileName, <span class="string">"UTF-8"</span>);<span class="comment">// IE浏览器  </span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (request.getHeader(<span class="string">"User-Agent"</span>).toUpperCase()  </span><br><span class="line">        .indexOf(<span class="string">"CHROME"</span>) &gt; <span class="number">0</span>) &#123;  </span><br><span class="line">    fname = <span class="keyword">new</span> String(fileName.getBytes(<span class="string">"UTF-8"</span>), <span class="string">"ISO8859-1"</span>);<span class="comment">// 谷歌  </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="3-应用实例动态生成验证码"><a href="#3-应用实例动态生成验证码" class="headerlink" title="3.应用实例动态生成验证码"></a>3.应用实例动态生成验证码</h2><h3 id="生成验证码工具类"><a href="#生成验证码工具类" class="headerlink" title="生成验证码工具类"></a>生成验证码工具类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.Color;</span><br><span class="line"><span class="keyword">import</span> java.awt.Font;</span><br><span class="line"><span class="keyword">import</span> java.awt.Graphics;</span><br><span class="line"><span class="keyword">import</span> java.awt.Graphics2D;</span><br><span class="line"><span class="keyword">import</span> java.awt.RenderingHints;</span><br><span class="line"><span class="keyword">import</span> java.awt.geom.AffineTransform;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">VerifyCodeUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用到Algerian字体，系统里没有的话需要安装字体，字体只显示大写，去掉了1,0,i,o几个容易混淆的字符</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String VERIFY_CODES = <span class="string">"23456789ABCDEFGHJKLMNPQRSTUVWXYZ"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Random random = <span class="keyword">new</span> Random();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用系统默认字符源生成验证码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> verifySize    验证码长度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">generateVerifyCode</span><span class="params">(<span class="keyword">int</span> verifySize)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> generateVerifyCode(verifySize, VERIFY_CODES);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用指定源生成验证码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> verifySize    验证码长度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sources   验证码字符源</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">generateVerifyCode</span><span class="params">(<span class="keyword">int</span> verifySize, String sources)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(sources == <span class="keyword">null</span> || sources.length() == <span class="number">0</span>)&#123;</span><br><span class="line">            sources = VERIFY_CODES;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> codesLen = sources.length();</span><br><span class="line">        Random rand = <span class="keyword">new</span> Random(System.currentTimeMillis());</span><br><span class="line">        StringBuilder verifyCode = <span class="keyword">new</span> StringBuilder(verifySize);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; verifySize; i++)&#123;</span><br><span class="line">            verifyCode.append(sources.charAt(rand.nextInt(codesLen-<span class="number">1</span>)));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> verifyCode.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成随机验证码文件,并返回验证码值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> w</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> h</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> outputFile</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> verifySize</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">outputVerifyImage</span><span class="params">(<span class="keyword">int</span> w, <span class="keyword">int</span> h, File outputFile, <span class="keyword">int</span> verifySize)</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">        String verifyCode = generateVerifyCode(verifySize);</span><br><span class="line">        outputImage(w, h, outputFile, verifyCode);</span><br><span class="line">        <span class="keyword">return</span> verifyCode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 输出随机验证码图片流,并返回验证码值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> w</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> h</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> os</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> verifySize</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">outputVerifyImage</span><span class="params">(<span class="keyword">int</span> w, <span class="keyword">int</span> h, OutputStream os, <span class="keyword">int</span> verifySize)</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">        String verifyCode = generateVerifyCode(verifySize);</span><br><span class="line">        outputImage(w, h, os, verifyCode);</span><br><span class="line">        <span class="keyword">return</span> verifyCode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成指定验证码图像文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> w</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> h</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> outputFile</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">outputImage</span><span class="params">(<span class="keyword">int</span> w, <span class="keyword">int</span> h, File outputFile, String code)</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(outputFile == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        File dir = outputFile.getParentFile();</span><br><span class="line">        <span class="keyword">if</span>(!dir.exists())&#123;</span><br><span class="line">            dir.mkdirs();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            outputFile.createNewFile();</span><br><span class="line">            FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(outputFile);</span><br><span class="line">            outputImage(w, h, fos, code);</span><br><span class="line">            fos.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span>(IOException e)&#123;</span><br><span class="line">            <span class="keyword">throw</span> e;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 输出指定验证码图片流</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> w</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> h</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> os</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">outputImage</span><span class="params">(<span class="keyword">int</span> w, <span class="keyword">int</span> h, OutputStream os, String code)</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">        <span class="keyword">int</span> verifySize = code.length();</span><br><span class="line">        BufferedImage image = <span class="keyword">new</span> BufferedImage(w, h, BufferedImage.TYPE_INT_RGB);</span><br><span class="line">        Random rand = <span class="keyword">new</span> Random();</span><br><span class="line">        Graphics2D g2 = image.createGraphics();</span><br><span class="line">        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);</span><br><span class="line">        Color[] colors = <span class="keyword">new</span> Color[<span class="number">5</span>];</span><br><span class="line">        Color[] colorSpaces = <span class="keyword">new</span> Color[] &#123; Color.WHITE, Color.CYAN,</span><br><span class="line">                Color.GRAY, Color.LIGHT_GRAY, Color.MAGENTA, Color.ORANGE,</span><br><span class="line">                Color.PINK, Color.YELLOW &#125;;</span><br><span class="line">        <span class="keyword">float</span>[] fractions = <span class="keyword">new</span> <span class="keyword">float</span>[colors.length];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; colors.length; i++)&#123;</span><br><span class="line">            colors[i] = colorSpaces[rand.nextInt(colorSpaces.length)];</span><br><span class="line">            fractions[i] = rand.nextFloat();</span><br><span class="line">        &#125;</span><br><span class="line">        Arrays.sort(fractions);</span><br><span class="line"></span><br><span class="line">        g2.setColor(Color.GRAY);<span class="comment">// 设置边框色</span></span><br><span class="line">        g2.fillRect(<span class="number">0</span>, <span class="number">0</span>, w, h);</span><br><span class="line"></span><br><span class="line">        Color c = getRandColor(<span class="number">200</span>, <span class="number">250</span>);</span><br><span class="line">        g2.setColor(c);<span class="comment">// 设置背景色</span></span><br><span class="line">        g2.fillRect(<span class="number">0</span>, <span class="number">2</span>, w, h-<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//绘制干扰线</span></span><br><span class="line">        Random random = <span class="keyword">new</span> Random();</span><br><span class="line">        g2.setColor(getRandColor(<span class="number">160</span>, <span class="number">200</span>));<span class="comment">// 设置线条的颜色</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> x = random.nextInt(w - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">int</span> y = random.nextInt(h - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">int</span> xl = random.nextInt(<span class="number">6</span>) + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">int</span> yl = random.nextInt(<span class="number">12</span>) + <span class="number">1</span>;</span><br><span class="line">            g2.drawLine(x, y, x + xl + <span class="number">40</span>, y + yl + <span class="number">20</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加噪点</span></span><br><span class="line">        <span class="keyword">float</span> yawpRate = <span class="number">0.05f</span>;<span class="comment">// 噪声率</span></span><br><span class="line">        <span class="keyword">int</span> area = (<span class="keyword">int</span>) (yawpRate * w * h);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; area; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> x = random.nextInt(w);</span><br><span class="line">            <span class="keyword">int</span> y = random.nextInt(h);</span><br><span class="line">            <span class="keyword">int</span> rgb = getRandomIntColor();</span><br><span class="line">            image.setRGB(x, y, rgb);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        shear(g2, w, h, c);<span class="comment">// 使图片扭曲</span></span><br><span class="line"></span><br><span class="line">        g2.setColor(getRandColor(<span class="number">100</span>, <span class="number">160</span>));</span><br><span class="line">        <span class="keyword">int</span> fontSize = h-<span class="number">4</span>;</span><br><span class="line">        Font font = <span class="keyword">new</span> Font(<span class="string">"Algerian"</span>, Font.ITALIC, fontSize);</span><br><span class="line">        g2.setFont(font);</span><br><span class="line">        <span class="keyword">char</span>[] chars = code.toCharArray();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; verifySize; i++)&#123;</span><br><span class="line">            AffineTransform affine = <span class="keyword">new</span> AffineTransform();</span><br><span class="line">            affine.setToRotation(Math.PI / <span class="number">4</span> * rand.nextDouble() * (rand.nextBoolean() ? <span class="number">1</span> : -<span class="number">1</span>), (w / verifySize) * i + fontSize/<span class="number">2</span>, h/<span class="number">2</span>);</span><br><span class="line">            g2.setTransform(affine);</span><br><span class="line">            g2.drawChars(chars, i, <span class="number">1</span>, ((w-<span class="number">10</span>) / verifySize) * i + <span class="number">5</span>, h/<span class="number">2</span> + fontSize/<span class="number">2</span> - <span class="number">10</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        g2.dispose();</span><br><span class="line">        ImageIO.write(image, <span class="string">"png"</span>, os);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Color <span class="title">getRandColor</span><span class="params">(<span class="keyword">int</span> fc, <span class="keyword">int</span> bc)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (fc &gt; <span class="number">255</span>)</span><br><span class="line">            fc = <span class="number">255</span>;</span><br><span class="line">        <span class="keyword">if</span> (bc &gt; <span class="number">255</span>)</span><br><span class="line">            bc = <span class="number">255</span>;</span><br><span class="line">        <span class="keyword">int</span> r = fc + random.nextInt(bc - fc);</span><br><span class="line">        <span class="keyword">int</span> g = fc + random.nextInt(bc - fc);</span><br><span class="line">        <span class="keyword">int</span> b = fc + random.nextInt(bc - fc);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Color(r, g, b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getRandomIntColor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] rgb = getRandomRgb();</span><br><span class="line">        <span class="keyword">int</span> color = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> c : rgb) &#123;</span><br><span class="line">            color = color &lt;&lt; <span class="number">8</span>;</span><br><span class="line">            color = color | c;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> color;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span>[] getRandomRgb() &#123;</span><br><span class="line">        <span class="keyword">int</span>[] rgb = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">            rgb[i] = random.nextInt(<span class="number">255</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> rgb;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">shear</span><span class="params">(Graphics g, <span class="keyword">int</span> w1, <span class="keyword">int</span> h1, Color color)</span> </span>&#123;</span><br><span class="line">        shearX(g, w1, h1, color);</span><br><span class="line">        shearY(g, w1, h1, color);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">shearX</span><span class="params">(Graphics g, <span class="keyword">int</span> w1, <span class="keyword">int</span> h1, Color color)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> period = random.nextInt(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">boolean</span> borderGap = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">int</span> frames = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> phase = random.nextInt(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; h1; i++) &#123;</span><br><span class="line">            <span class="keyword">double</span> d = (<span class="keyword">double</span>) (period &gt;&gt; <span class="number">1</span>)</span><br><span class="line">                    * Math.sin((<span class="keyword">double</span>) i / (<span class="keyword">double</span>) period</span><br><span class="line">                            + (<span class="number">6.2831853071795862</span>D * (<span class="keyword">double</span>) phase)</span><br><span class="line">                            / (<span class="keyword">double</span>) frames);</span><br><span class="line">            g.copyArea(<span class="number">0</span>, i, w1, <span class="number">1</span>, (<span class="keyword">int</span>) d, <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span> (borderGap) &#123;</span><br><span class="line">                g.setColor(color);</span><br><span class="line">                g.drawLine((<span class="keyword">int</span>) d, i, <span class="number">0</span>, i);</span><br><span class="line">                g.drawLine((<span class="keyword">int</span>) d + w1, i, w1, i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">shearY</span><span class="params">(Graphics g, <span class="keyword">int</span> w1, <span class="keyword">int</span> h1, Color color)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> period = random.nextInt(<span class="number">40</span>) + <span class="number">10</span>; <span class="comment">// 50;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">boolean</span> borderGap = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">int</span> frames = <span class="number">20</span>;</span><br><span class="line">        <span class="keyword">int</span> phase = <span class="number">7</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; w1; i++) &#123;</span><br><span class="line">            <span class="keyword">double</span> d = (<span class="keyword">double</span>) (period &gt;&gt; <span class="number">1</span>)</span><br><span class="line">                    * Math.sin((<span class="keyword">double</span>) i / (<span class="keyword">double</span>) period</span><br><span class="line">                            + (<span class="number">6.2831853071795862</span>D * (<span class="keyword">double</span>) phase)</span><br><span class="line">                            / (<span class="keyword">double</span>) frames);</span><br><span class="line">            g.copyArea(i, <span class="number">0</span>, <span class="number">1</span>, h1, <span class="number">0</span>, (<span class="keyword">int</span>) d);</span><br><span class="line">            <span class="keyword">if</span> (borderGap) &#123;</span><br><span class="line">                g.setColor(color);</span><br><span class="line">                g.drawLine(i, (<span class="keyword">int</span>) d, i, <span class="number">0</span>);</span><br><span class="line">                g.drawLine(i, (<span class="keyword">int</span>) d + h1, i, h1);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">        File dir = <span class="keyword">new</span> File(<span class="string">"C:/Users/H__D/Desktop/"</span>);</span><br><span class="line">        <span class="keyword">int</span> w = <span class="number">200</span>, h = <span class="number">80</span>;</span><br><span class="line">        String verifyCode = generateVerifyCode(<span class="number">4</span>);</span><br><span class="line">        File file = <span class="keyword">new</span> File(dir, verifyCode + <span class="string">".jpg"</span>);</span><br><span class="line">        outputImage(w, h, file, verifyCode);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="使用流程"><a href="#使用流程" class="headerlink" title="使用流程"></a>使用流程</h3><p><img src="/2020/06/28/servlet3/3.jpg" alt="3"></p>
<h3 id="服务端生成验证码servlet"><a href="#服务端生成验证码servlet" class="headerlink" title="服务端生成验证码servlet"></a>服务端生成验证码servlet</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.util.VerifyCodeUtils;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CreateCodeServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        resp.setHeader(<span class="string">"Pragma"</span>, <span class="string">"No-cache"</span>);</span><br><span class="line">        resp.setHeader(<span class="string">"Cache-Control"</span>, <span class="string">"no-cache"</span>);</span><br><span class="line">        resp.setDateHeader(<span class="string">"Expires"</span>, <span class="number">0</span>);</span><br><span class="line">        resp.setContentType(<span class="string">"image/jpeg"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//生成随机字串</span></span><br><span class="line">        String verifyCode = VerifyCodeUtils.generateVerifyCode(<span class="number">4</span>);</span><br><span class="line">        <span class="comment">//存入会话session</span></span><br><span class="line">        req.getSession().setAttribute(<span class="string">"CODE"</span>, verifyCode.toLowerCase());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//生成图片</span></span><br><span class="line">        <span class="keyword">int</span> width = <span class="number">100</span>;<span class="comment">//宽</span></span><br><span class="line">        <span class="keyword">int</span> height = <span class="number">40</span>;<span class="comment">//高</span></span><br><span class="line">        VerifyCodeUtils.outputImage(width, height, resp.getOutputStream(), verifyCode);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="服务器端验证验证码servlet"><a href="#服务器端验证验证码servlet" class="headerlink" title="服务器端验证验证码servlet"></a>服务器端验证验证码servlet</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.util.VerifyCodeUtils;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">VerifyCodeServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        String code = req.getParameter(<span class="string">"code"</span>);</span><br><span class="line">        String key = (String) req.getSession().getAttribute(<span class="string">"CODE"</span>);</span><br><span class="line">        <span class="keyword">if</span>(code != <span class="keyword">null</span> &amp;&amp; code.equalsIgnoreCase(key))&#123;</span><br><span class="line">            req.getSession().removeAttribute(<span class="string">"CODE"</span>);</span><br><span class="line">            resp.getWriter().println(<span class="keyword">true</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            resp.getWriter().println(<span class="keyword">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">        <span class="keyword">super</span>.doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="servlet注册，web-xml文件"><a href="#servlet注册，web-xml文件" class="headerlink" title="servlet注册，web.xml文件"></a>servlet注册，web.xml文件</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/javaee"</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"</span> <span class="attr">id</span>=<span class="string">"WebApp_ID"</span> <span class="attr">version</span>=<span class="string">"3.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>test-captcha<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>CreateCodeServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.servlet.CreateCodeServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>CreateCodeServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/createCode<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>VerifyCodeServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.servlet.VerifyCodeServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>VerifyCodeServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/verifyCode<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="前端html文件"><a href="#前端html文件" class="headerlink" title="前端html文件"></a>前端html文件</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//W3C//DTD HTML 4.01 Transitional//EN"</span> <span class="meta-string">"http://www.w3.org/TR/html4/loose.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>测试验证码：<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    请输入验证码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"code"</span> /&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">"codeimg"</span> <span class="attr">src</span>=<span class="string">"$&#123;pageContext.request.contextPath &#125;/createCode"</span> <span class="attr">onclick</span>=<span class="string">"changeImg()"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void(0);"</span> <span class="attr">onclick</span>=<span class="string">"changeImg()"</span>&gt;</span>看不清，换一张<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"submit()"</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="comment">//改变验证码事件</span></span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">changeImg</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> img = <span class="built_in">document</span>.getElementById(<span class="string">'codeimg'</span>);</span></span><br><span class="line"><span class="javascript">            img.src = <span class="string">"$&#123;pageContext.request.contextPath &#125;/createCode?x="</span> + <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">100</span>)</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="comment">//提交验证并验证验证码</span></span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">submit</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> input = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'input'</span>)[<span class="number">0</span>];</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">//ajax提交</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            xhr.onreadystatechange = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line">                if(xhr.readyState == 4 &amp;&amp; xhr.status == 200) &#123;</span><br><span class="line">                    alert(xhr.responseText);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">            xhr.open(<span class="string">'get'</span>,<span class="string">'$&#123;pageContext.request.contextPath &#125;/verifyCode?code='</span> + input.value);</span></span><br><span class="line"><span class="actionscript">            xhr.send(<span class="literal">null</span>);</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<hr>
]]></content>
  </entry>
</search>
